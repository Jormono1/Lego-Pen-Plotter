import re
import os

X_Max = 2304        # Upper limit of machine travel in X direction (degrees rotation)
Y_Max = 3450        # Upper limit of machine travel in Y direction (degrees rotation)

### first value is always unit width of the letter ###
### All Letters are 4 units tall ###
alphabet = {
"A" : [2,
    [False,False,0],
    [0,3,False],
    [1,1,False],
    [1,-1,False],
    [0,-3,False],
    [0,0,1],
    [-2,3,False],
    [False,False,0],
    [2,0,False],
    [False,False,1]],
"B" : [2,
    [False,False,0],
    [0,4,False],
    [1,0,False],
    [1,-1,False],
    [-1,-1,False],
    [1,-1,False],
    [-1,-1,False],
    [-1,0,False],
    [False,False,1],
    [0,2,False],
    [False,False,0],
    [1,0,False],
    [False,False,1]],
"C" : [3,
    [3,1,False],
    [False,False,0],
    [-1,-1,False],
    [-1,0,False],
    [-1,1,False],
    [0,1,False],
    [1,1,False],
    [1,0,False],
    [1,-1,False],
    [False,False,1]],
"D" : [2,
    [False,False,0],
    [0,4,False],
    [1,0,False],
    [1,-1,False],
    [0,1,False],
    [-1,-1,False],
    [-1,0,False],
    [False,False,1]],
"E" : [2,
    [2,0,False],
    [False,False,0],
    [-2,0,False],
    [0,4,False],
    [2,0,False],
    [False,False,1],
    [-2,-2,False],
    [False,False,0],
    [1,0,False],
    [False,False,1]],
"F" : [2,
    [False,False,0],
    [0,4,False],
    [2,0,False],
    [False,False,1],
    [-2,-2,False],
    [False,False,0],
    [1,0,False],
    [False,False,1]],
"G" : [3,
    [2,2,False],
    [False,False,0],
    [1,0,False],
    [0,-1,False],
    [-1,-1,False],
    [-1,0,False],
    [-1,1,False],
    [0,1,False],
    [1,1,False],
    [1,0,False],
    [1,-1,False],
    [False,False,1]],
"H" : [2,
    [False,False,0],
    [0,4,False],
    [False,False,1],
    [2,0,False],
    [False,False,0],
    [0,-4,False],
    [False,False,1],
    [-2,2,False],
    [False,False,0],
    [2,0,False],
    [False,False,1]],
"I" : [2,
    [False,False,0],
    [2,0,False],
    [False,False,1],
    [-1,0,False],
    [False,False,0],
    [0,4,False],
    [False,False,1],
    [-2,0,False],
    [False,False,0],
    [2,0,False],
    [False,False,1]],
"J" : [3,
    [0,2,False],
    [False,False,0],
    [0,-1,False],
    [1,-1,False],
    [1,1,False],
    [0,3,False],
    [False,False,1],
    [-1,0,False],
    [False,False,0],
    [2,0,False],
    [False,False,1]],
"K" : [3,
    [False,False,0],
    [0,4,False],
    [False,False,1],
    [3,0,False],
    [False,False,0],
    [0,-1,False],
    [-1,-1,False],
    [-1,0,False],
    [False,False,1],
    [1,0,False],
    [False,False,0],
    [1,-1,False],
    [0,-1,False],
    [False,False,1]],
"L" : [2,
    [2,0,False],
    [False,False,0],
    [-2,0,False],
    [0,4,False],
    [False,False,1]],
"M" : [4,
    [False,False,0],
    [0,4,False],
    [2,-2,False],
    [2,2,False],
    [0,-4,False],
    [False,False,1]],
"N" : [4,
    [False,False,0],
    [0,4,False],
    [4,-4,False],
    [0,4,False],
    [False,False,1]],
"O" : [3,
    [1,0,False],
    [False,False,0],
    [-1,1,False],
    [0,2,False],
    [1,1,False],
    [1,0,False],
    [1,-1,False],
    [0,-1,False],
    [-1,-1,False],
    [-1,0,False],
    [False,False,1]],
"P" : [2,
    [False,False,0],
    [0,4,False],
    [1,0,False],
    [1,-1,False],
    [-1,1,False],
    [-1,1,False],
    [False,False,1]],
"Q" : [3,
    [1,0,False],
    [False,False,0],
    [-1,1,False],
    [0,2,False],
    [1,1,False],
    [1,0,False],
    [1,-1,False],
    [0,-1,False],
    [-1,-1,False],
    [-1,0,False],
    [False,False,1],
    [2,1,False],
    [False,False,0],
    [1,-1,False],
    [False,False,1]],
"R" : [2,
    [False,False,0],
    [0,4,False],
    [1,0,False],
    [1,-1,False],
    [-1,1,False],
    [-1,1,False],
    [2,-2,False],
    [False,False,1]],
"S" : [3,
    [0,1,False],
    [False,False,0],
    [1,-1,False],
    [1,0,False],
    [1,1,False],
    [-1,1,False],
    [-1,0,False],
    [-1,1,False],
    [1,1,False],
    [1,0,False],
    [1,-1,False],
    [False,False,1]],
"T" : [2,
    [1,0,False],
    [False,False,0],
    [0,4,False],
    [False,False,1],
    [-1,0,False],
    [False,False,0],
    [2,0,False],
    [False,False,1]],
"U" : [3,
    [0,4,False],
    [False,False,0],
    [0,-3,False],
    [1,-1,False],
    [1,0,False],
    [1,1,False],
    [0,3,False],
    [False,False,1]],
"V" : [4,
    [0,4,False],
    [False,False,0],
    [0,-2,False],
    [2,-2,False],
    [2,2,False],
    [0,2,False],
    [False,False,1]],
"W" : [4,
    [0,4,False],
    [False,False,0],
    [0,-4,False],
    [2,2,False],
    [2,-2,False],
    [0,4,False],
    [False,False,1]],
"X" : [4,
    [False,False,0],
    [4,4,False],
    [False,False,1],
    [-4,0,False],
    [False,False,0],
    [4,-4,False],
    [False,False,1]],
"Y" : [2,
    [0,4,False],
    [False,False,0],
    [0,-1,False],
    [1,-1,False],
    [1,1,False],
    [0,1,False],
    [False,False,1],
    [-1,2,False],
    [False,False,0],
    [0,-2,False],
    [False,False,1]],
"Z" :[4,
    [0,4,False],
    [False,False,0],
    [4,0,False],
    [-4,-4,False],
    [4,0,False],
    [False,False,1]]}
scale = 4     # degrees of rotation = 1 unit of movement in alphabet

for letter in alphabet.values():
    scaled_ltr = []
    for i in letter:
        if i == letter[0]:
            scaled_ltr.append(letter * scale)
        else:
            coord = []
            for coordinates in i:
                coord.append(coordinates * scale)
            scaled_ltr.append(coord)
    print(scaled_ltr)

#usr_input = "ABCD "

#length = 0
#for i in usr_input:
#    letter = alphabet.get(i)
#    length += letter[0]

